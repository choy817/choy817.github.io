---
layout: post
title: "[기초]부분 문자열 이어 붙여 문자열 만들기"
category: Programmers
---

### 문제
---
길이가 같은 문자열 배열 my_strings와 이차원 정수 배열 parts가 매개변수로 주어집니다. parts[i]는 [s, e] 형태로, my_string[i]의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각 my_strings의 원소의 parts에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.     
&nbsp;


- 제한사항
    - 1 ≤ my_strings의 길이 = parts의 길이 ≤ 100
    - 1 ≤ my_strings의 원소의 길이 ≤ 100
    - parts[i]를 [s, e]라 할 때, 다음을 만족합니다.
        - 0 ≤ s ≤ e < my_strings[i]의 길이


&nbsp;

입출력 예

|my_strings	|parts|	result|
|---|---|---|
|["progressive", "hamburger", "hammer", "ahocorasick"]	|[[0, 4], [1, 2], [3, 5], [7, 7]]	|"programmers"|

&nbsp;

입출력 예 설명   

입출력 예 #1   

예제 1번의 입력을 보기 좋게 표로 나타내면 다음과 같습니다.

|i	|my_strings[i]|	parts[i]|	부분 문자열|
|---|---|---|---|
|0	|"progressive"	|[0, 4]	|"progr"|
|1	|"hamburger"|	[1, 2]	|"am"|
|2	|"hammer"|	[3, 5]	|"mer"|
|3	|"ahocorasick"|	[7, 7]	|"s"|

각 부분 문자열을 순서대로 이어 붙인 문자열은 "programmers"입니다. 따라서 "programmers"를 return 합니다.

&nbsp;

### 제출한 답
---
```java
class Solution {
    public String solution(String[] my_strings, int[][] parts) {
        String answer = "";int s=0,e=0;

        for (int i = 0; i < parts.length ; i++) {
            s=parts[i][0];
            e=parts[i][1];
            //my_strings[i]번방의 문자열을 잘라서 answer에 삽입한다
            answer+=my_strings[i].substring(s,e+1);
        }
        return answer;
    }
}
```
&nbsp;  
substring()에서 endIndex 값을 줄 경우 endIndex 이전까지의 문자열을 잘라서 리턴한다.   
따라서 endIndex+1을 해줘야 원하는 문자열을 리턴받을 수 있다

my_strings[0].substring(0,4)일 때
![substring](https://github.com/choy817/choy817.github.io/assets/83875844/be856f4a-1496-4ec2-8a76-36f7746dff3c)




