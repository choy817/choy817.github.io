---
layout: post
title: "[DB]데이터베이스의 기본"
category: DB
---

DB와 DBMS
- DB : 일정한 규칙 혹은 규약을 통해 구조화되어 저장되는 데이터의 모음
- DBMS : DB를 제어, 관리하는 통합 시스템   
&nbsp;

### 데이터베이스의 구성
---
(1) 엔터티   
사람, 장소, 물건, 사건, 개념 등 여러 개의 속성을 지닌 명사   
&nbsp;

약한 엔터티와 강한 엔터티   
A가 <u>혼자서는 존재하지 못하고</u> B의 존재 여부에 따라 종속적이라면?   
A : 약한 엔터티 B : 강한 엔터티   
&nbsp;

(2) 릴레이션   
데이터베이스에서 정보를 구분하여 저장하는 기본 단위   
관계형 데이터베이스에서는 '테이블' 이라고 하며 NoSQL 데이터베이스에서는 '컬렉션' 이라고 한다.   
&nbsp;

(3) 속성   
릴레이션에서 관리하는 구체적이며 고유한 이름을 갖는 정보   
ex) 차의 속성 : 색상, 차종, 바퀴의 수...   
&nbsp;

(4) 도메인   
릴레이션에 포함된 각각의 속성들이 가질 수 있는 값의 집합   
ex) 성별의 속성이 가지는 값 : {남자, 여자}   ()
&nbsp;

위 요소들을 기반으로 데이터베이스에서 필드와 레코드로 구성된 테이블을 만들 수 있다.

\<회원>

|name   |id     |address  |phone        |
|---    |---    |---      |---          |
|홍길동   |hong |seoul     |010-1234-5678|
|이순신   |lee  |incheon   |010-0000-0000|
|김유신   |kim  |jeju      |010-1111-1234|

회원이란 엔터티는 이름, 아이디 등의 속성을 가지고 있으며 name, id 등의 필드를 가짐. 그리고 이 테이블에 쌓이는 행 단위의 데이터를 레코드(튜플)라고 함   
&nbsp;

(5) 필드 타입(MYSQL 기준)
- 날짜 타입
  - DATE : 날짜는 있지만 시간은 없는 값(3byte)
  - DATETIME : 날짜 및 시간을 모두 포함하는 값(8byte)
  - TIMESTAMP : 날짜 및 시간을 모두 포함하는 값(4byte)

- 문자타입
  - CHAR : 테이블 생성 시 선언한 길이로 고정
  - VARCHAR : 입력된 데이터에 따라 용량을 가변시켜 저장   
&nbsp;

(6) 관계
- 1:1
  - 하나의 레코드가 다른 테이블 레코드 한개와 연결된 경우
  - ex) 회원 한명 당 휴대폰번호 한 개 보유
- 1:N
  - 하나의 레코드가 서로 다른 여러 개의 레코드와 연결된 경우
  - ex) 회원 한명이 여러 개의 상품을 장바구니에 담을 수 있음
- N:M
  - 여러 개의 레코드가 다른 테이블의 여러 레코드와 연결된 경우
  - ex) 학생은 여러 교수의 강의를 들을 수 있고, 교수도 여러 명의 학생에게 강의를 할 수 있음   
&nbsp;

(7) 키   
테이블 간의 관계를 명확히 하고 테이블 자체의 인덱스를 위해 설정된 장치   
- 기본키(Primary Key) : 유일성과 최소성을 만족
- 외래키(Foreign Key) : 다른 테이블의 기본키를 참조하는 값. 개체와의 관계를 식별하는데 사용
- 후보키(Candidate key) : 기본키가 될 수 있는 후보들. 유일성과 최소성을 동시에 만족한다
- 대체키(Alternate Key) : 후보키가 두 개 이상일 경우 어느 하나를 기본키로 지정하고 남은 후보키들
- 슈퍼키(Super Key) : 레코드를 유일하게 식별할 수 있는 키. 유일성을 갖췄지만 최소성은 갖추지 않음