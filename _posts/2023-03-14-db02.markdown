---
layout: post
title: "[DB]트랜잭션과 무결성"
category: DB
---

### 트랜잭션
---
- 데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업의 단위
- 데이터베이스 접근 방법은 쿼리이므로, 여러 개의 쿼리들을 하나로 묶는 단위를 말함   

&nbsp;

🔘 트랜잭션의 특징  

(1) 원자성   
- 트랜잭션과 관련된 일이 모두 수행되었거나 수행되지 않았음을 보장
- all or nothing
- 트랜잭션을 커밋했는데 문제가 발생하여 롤백하는 경우 그 이후에 모두 수행되지 않음을 보장하는 것
> ex)   
> A의 잔고는 1000만원, B의 잔고는 0원   
> A -> B에게 500만원을 이체한다(A의 잔고 500만원, B의 잔고 500만원)   
> 이 작업을 취소했을 때 A의 잔고는 다시 1000만원, B의 잔고는 0원이 되어야 한다.

- 커밋과 롤백으로 데이터의 무결성을 보장할 수 있다.   
  -  커밋 : 여러 쿼리가 성공적으로 처리되었을 때 변경된 내용을 모두 영구적으로 저장하는 것   
  -  롤백 : 트랜잭션으로 처리한 하나의 묶음 과정을 일어나기 전으로 되돌리는 것   
&nbsp;

(2) 일관성   
- 허용된 방식으로만 데이터를 변경해야 함
- DB에 기록된 모든 데이터는 여러 조건, 규칙에 따라 유효함을 가져야 한다.
> ex) A의 잔고가 1000만원이 있고 B의 잔고는 0원일 때 B는 A에게 500만원을 송금할 수 없다.
&nbsp;


(3) 격리성   
- 트랜잭션 수행 시 서로 끼어들지 못하는 것
- 격리성은 여러 개의 격리 수준으로 나뉘어 격리성을 보장한다.   
&nbsp;

(4) 지속성   
- 성공적으로 수행된 트랜잭션은 영원히 반영되어야 한다
- 이는 데이터베이스에 시스템 장애가 발생해도 원래 상태로 복구하는 회복 기능이 있어야 함을 뜻한다
- 이를 위해 DB에서 체크섬, 저널링, 롤백 등의 기능을 제공한다   
&nbsp;


### 무결성
---
- DB의 정확성, 일관성, 유효성을 유지하는 것
- 무결성이 유지되어야 DB에 저장된 값과 현실 세계의 실제 값이 일치하는지에 대한 신뢰가 생긴다

🔘 무결성의 종류  


|이름|설명|
|---|---|
|개체 무결성| 기본키로 선택된 필드는 빈 값을 허용하지 않는다|
|참조 무결성| 서로 참조 관계에 있는 두 테이블의 데이터는 항상 일관된 값을 유지해야 한다|
|고유 무결성| 특정 속성에 대해 고유한 값을 가지도록 조건이 주어진 경우 그 속성 값은 모두 고유한 값을 가짐|
|NULL 무결성| 특정 속성 값에서 NULL이 올 수 없다|