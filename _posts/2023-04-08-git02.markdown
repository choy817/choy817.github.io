---
layout: post
title: "[git]브랜치"
category: git
---

### 브랜치
---
특정 기준에서 줄기를 나누어 작업할 수 있는 기능.   
두 명 이상이 동시에 버전관리를 할 때에 서로의 작업물에 의존하지 않고 원할 때 코드를 올리거나 협업자의 코드와 합칠 수 있다.  
&nbsp;

### master
---
git이 제공하는 브랜치인데 첫 커밋을 하면 자동으로 master라는 브랜치의 이름이 커밋을 가리키게 된다   
&nbsp;

\* 가리킨다는 표현을 사용하는 이유는 브랜치는 포인터이기 때문이다.   
- 브랜치가 그저 커밋을 가리키는 것 만으로도 분기를 만들 수 있기 때문에 가볍고 빠르다(분기를 만들때 마다 프로젝트를 통째로 복사하지 않음)   
- 분기 시 master와 다른 브랜치 사이를 HEAD라는 특수한 포인터를 사용하여 넘나들 수 있다(타임머신의 역할)
- 브랜치의 최신 커밋이 아닌 과거 커밋으로도 HEAD를 이동시킬 수 있다. 다만 이 경우는 master 브랜치의 포인터와 HEAD가 떨어져있기에 분리된 HEAD 상태가 된다.   
&nbsp;

### 병합
---
간단히 말해서 두 버전의 합집합을 구하는 것이다.
- Merge commit : 일반적인 병합
- Fast-forword : 브랜치 분기 이후 A브랜치가 병합하려는(master)브랜치의 모든 커밋내역을 가지고 있다면 A는 최신 브랜치가 될 수 있으며, 병합 시 단순히 커밋이 이동된다(A의 모든 이력을 master로 이동)
- Conflict : 두 브랜치의 동일한 파일에 상반된 내용이 있을 경우 충돌 발생