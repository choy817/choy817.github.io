---
layout: post
title: "[운영체제]스레드"
category: 운영체제
---

### 스레드
---
- 프로세스의 실행 가능한 가장 작은 단위
- 프로세스는 여러 스레드를 가질 수 있다   
&nbsp;

멀티 스레딩
- 프로세스 내 작업을 여러 개의 스레드로 처리하는 방법
- 서로 자원을 공유하기 때문에 효율성이 높다
- 한 스레드에 문제가 생기면 다른 스레드에도 영향을 끼침   
&nbsp;

### 공유 자원
---
- 시스템 안에서 각 프로세스, 스레드가 함께 접근할 수 있는 자원이나 변수
- 공유 자원을 두개 이상의 프로세스가 동시에 읽거나 쓰는 상황을 경쟁 상태라고 함   
&nbsp;

### 임계 영역
---
- 공유 자원에 접근 할 때 순서 등의 이유로 결과가 달라지는 것   
&nbsp;

임계 영역을 해결하기 위한 방법
&nbsp;

(1) 뮤텍스   
- 공유 자원을 사용하기 전에 설정, 사용한 후에 해제
- 하나의 상태만 가짐

(2) 세마포어   
- 간단한 정수값과 두가지 함수(P,V)로 공유 자원에 대한 접근을 처리함
- P : 자신의 차례가 올 때 까지 기다리는 함수. 프로세스가 공유 자원에 접근하면 수행한다
- V : 다음 프로세스로 순서를 넘겨주는 함수. 프로세스가 공유 자원을 해제하면 수행한다

(3) 바이너리 세마포어
- 0과 1 두가지 값만 가질 수 있는 세마포어

(4) 모니터
- 공유 자원을 숨기고 해당 접근에 대해 인터페이스만 제공
- 모니터 큐를 이용해 작업들을 순차적으로 처리   
&nbsp;

이 방법 모두 상호배제, 한정 대기, 융통성 조건을 만족한다.   
&nbsp;

### 교착상태
---
- 서로가 가진 자원을 기다리며 중단된 상태   
&nbsp;

교착 상태의 원인
- 상호 배제 : 한 프로세스가 자원을 독점하고 있으면 다른 프로세스는 접근이 불가하다
- 점유와 대기 : 힌 프로세스가 점유한 자원을 다른 프로세스가 요청하는 상태
- 비선점 : 다른 프로세스의 자원을 강제적으로 가져올 수 없다
- 환형 대기 : 서로가 서로의 자원을 내놓으라고 요구하는 상황   
&nbsp;

교착 상태 해결 방법
- 애초에 조건이 성립되지 않게 한다
- 은행원 알고리즘을 사용한다
- 사이클이 있는지 찾아보고 관련된 프로세스를 하나씩 지움
- 사용자가 작업을 종료한다